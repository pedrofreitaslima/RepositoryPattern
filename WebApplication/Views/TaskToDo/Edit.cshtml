@model Domain.Entities.TaskToDo

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

<h4>TaskToDo</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="UserId" value="@ViewBag.UserId" />
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Start" class="control-label"></label>
                <input asp-for="Start" class="form-control" />
                <span asp-validation-for="Start" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DeadLine" class="control-label"></label>
                <input asp-for="DeadLine" class="form-control" />
                <span asp-validation-for="DeadLine" class="text-danger"></span>
            </div>
            <div class="form-group">
                User: <label asp-for="User.Name" class="control-label">@Model.User.Name</label>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    @Html.ActionLink(linkText: "Back to List", actionName: "Index", controllerName: "User",
                     routeValues: new { Id = ViewBag.Id })
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
